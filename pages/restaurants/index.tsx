import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { Footer } from "../../share/components/Footer";
import { Navbar } from "../../share/components/Navbar";
import { useEffect, useState } from "react";
import RestaurantCard from "../../share/components/restaurantCard";
import RestaurantAside from "../../share/components/restaurantAside";
import { RestaurantFilterModal } from "../../share/components/restaurantFilterModal";
import { formtype, getRestourans } from "@/share/services/axios";
import { UpperCase } from "@/share/services/upperCase";
import { useRouter } from "next/router";

// const Restaurants: NextPage = ({ restaurants }: any) => {

export default function Restaurants() {

  const { push } = useRouter()

  const [isFilterModalOpen, setFilterModalOpen] = useState(false);

  const [restaurants, setRestaurants] = useState([]);

  const [filteredRes, setFilteredRes] = useState([]);

  const handleOpenFilterModal = () => {
    setFilterModalOpen(true);
  };

  const handleCloseFilterModal = () => {
    setFilterModalOpen(false);
  };

  function filterRes(id?: string) {
    if (id) {
      const filteredArr = restaurants.filter(
        (item: any) => item.category_id === id
      );
      setFilteredRes(filteredArr);
    } else {
      setFilteredRes(restaurants);
    }
  }

  console.log(filteredRes);

  async function renderRestaurants() {
    try {
      const response = await getRestourans();
      // console.log(response);
      setRestaurants(response?.data.result.data);
    } catch (err) {
      console.log(err);
    }
  }


  function handleClickCard(id:string) {
  push(`/restaurants/${id}`)
}


  useEffect(() => {
    renderRestaurants();
  }, []);

  useEffect(() => {
    filterRes();
  }, [restaurants]);

  return (
    <>
      <Head>
        <title>Foody | Restaurants</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/mainBurger.svg" />
      </Head>

      <main>
        <Navbar />

        <section className="mx-0 px-1 sm:px-0 sm:m-8 flex flex-col sm:flex-row justify-center gap-10">
          <div className="hidden rounded-md sm:flex flex-col max-h-screen overflow-y-auto gap-8 bg-whiteLight1 w-1/6 p-4">
            <RestaurantAside onClick={filterRes} />
          </div>

          <div
            className="flex sm:hidden items-center mt-4 justify-center gap-2 shadow-lg p-4"
            onClick={handleOpenFilterModal}
          >
            <Image width={25} height={0} src={"/filter.svg"} alt="filter" />
            <p className="font-medium text-2xl text-grayText2">Filters</p>
          </div>

          {/* Modal */}
          {isFilterModalOpen && (
            <RestaurantFilterModal onClose={handleCloseFilterModal} />
          )}
          {/* Modal END */}

          {/* CARDS */}
          <div className="w-full flex justify-between max-h-[740px] mb-8 sm:mb-0 overflow-y-auto flex-wrap gap-x-1 gap-y-8">
            {filteredRes?.map((item: formtype) => {
              console.log(item);
              
              return (
                <RestaurantCard
                  onClick={()=>handleClickCard(item.id)}
                  key={item.name}
                  name={UpperCase(item.name)}
                  cuisine={item.cuisine}
                  deliveryCost={item.delivery_price}
                  deliveryTime={item.delivery_min + "min."}
                  imageSrc={item.img_url}
                />
              );
            })}
          </div>
        </section>

        <Footer isTop={false} />
      </main>
    </>
  );
}

// export default Restaurants;

// export async function getServerSideProps() {
//   try {
//     const response = await getRestourans();
//     console.log(response);

//     return {
//       props: {
//         restaurants: response|| null,
//       },
//     };
//   } catch (error) {
//     console.error("Error fetching restaurant data:", error);
//     return {
//       props: {
//         restaurants: null,
//       },
//     };
//   }
// }
